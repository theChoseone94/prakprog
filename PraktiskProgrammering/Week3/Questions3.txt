Questions 2 for week 3

1. What is the option that instructs the gcc compiler to print out all warnings?
	"-Wall" prints out the warnings when compiling with gcc
	
2. Name the comparison operators in C. 
	== (equal to)
	!= (not equal to)
	< (less than)
	> (larger than)
	<= (less or equal)
	>= larger or equal
	
3. Rewrite this piece of code, (a>b?a:b), using the if statement. 
	I would imagine it would be something like this
	if(a>b) {a:b)
	where a and b are set as double or float before hand. 
	
4. If you use mathematical functions from complex.h, do you need to link your program with -lm option? 
	Yes you do! complex.h needs the math.h, linked via the command -lm
	
	
5. What will the following piece of code print? 

int i=1; printf("%i\n",i); printf("%i\n",i++); printf("%i\n",++i);

	It will print
	1
	1
	3
	this is because it will print the value i, then add 1 but show the value before adding 1 (i++ adds one, but when printed, shows the value before increment)
	++i adds and when printed, shows the value, now 3 since the former i++ makes i = 2. 
	
how about?

int i=1; printf("%i %i %i\n",i,i++,++i);

	It will print: 3,2,3
	
	It also gives warnings of that i maybe undefined. 
	
	
6.Rewrite the loop while(condition)body using the for loop. 
	for(int;condition;do){body}
	
7. Rewrite the loop for(init;cond;inc)body using the while loop. 
	init
	while(condition)body
	
8. Rewrite the loop do body while(condition); using the for loop. 
	for(init condition){body}
	
9. Is this a valid C-code?

if(0) printf("0 is true\n");
else  printf("0 is false\n");
if(7) printf("7 is true\n");
else  printf("7 is false\n");

Well it runs and prints out 
0 is false
7 is true

no warnings. 

10.Does C have a boolean type (that is, a type having one of the two values, "true" or "false") type?

no not really, you can use the < == != and so on, but no real true/false types.



	
	
